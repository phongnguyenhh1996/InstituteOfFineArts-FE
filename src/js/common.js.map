{"version":3,"sources":["src/common.js"],"names":["UNAUTHORIZED","axios","interceptors","response","use","error","status","window","location","href","Promise","reject","apiUrl","ROLE","roleName","authPath","pathname","startsWith","accessToken","localStorage","getItem","$","hide","method","url","headers","Authorization","then","res","console","log","data","append","Username","RoleId","show","findIndex","path","history","back","catch","on","e","preventDefault","userName","password","val","trim","addClass","access_token","setItem","click","removeItem"],"mappings":"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","sourcesContent":["import $ from 'jquery'\nimport axios from 'axios'\nconst UNAUTHORIZED = 401\naxios.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    const {\n      status\n    } = error.response\n    if (status === UNAUTHORIZED) {\n      window.location.href = '/login.html'\n    }\n    return Promise.reject(error)\n  }\n)\nconst apiUrl = 'http://192.168.1.42:44396/'\nconst ROLE = {\n  1: {\n    roleName: 'Admin',\n    authPath: ['/admin/', '/admin/user-list.html', '/admin/create-user.html']\n  },\n  2: {\n    roleName: 'Manager',\n    authPath: ['/admin/']\n  },\n  3: {\n    roleName: 'Teacher',\n    authPath: ['/admin/']\n  },\n  4: {\n    roleName: 'Student',\n    authPath: ['/admin/']\n  }\n}\n// auth admin page, get user infor\nif (window.location.pathname.startsWith('/admin')) {\n  const accessToken = localStorage.getItem('accessToken')\n  if (!accessToken) {\n    window.location.href = '/login.html'\n  } else {\n    // hide all auth role element\n    $('[data-role]').hide()\n    // get current user infor\n    axios({\n      method: 'get',\n      url: `${apiUrl}/user/me`,\n      headers: {\n        Authorization: `bearer ${localStorage.getItem('accessToken')}`\n      }\n    })\n      .then((res) => {\n        console.log(res)\n\n        // if dont have user data then logout\n        if (!(res && res.data)) {\n          window.location.href = '/login.html'\n        }\n        // set user data into view\n        const {\n          data\n        } = res\n        $('#userName').append(data.Username)\n        $('#userRole').append(ROLE[data.RoleId].roleName)\n        // show only matching role auth element\n        $(`[data-role*=\"${data.RoleId}\"]`).show()\n        // if not match route auth then logout\n        const {\n          authPath\n        } = ROLE[data.RoleId]\n\n        if (authPath.findIndex((path) => path === window.location.pathname) === -1) {\n          window.history.back()\n        }\n      }).catch((res) => console.log(res))\n  }\n}\n\n// login\n$('#loginForm').on('submit', (e) => {\n  e.preventDefault()\n  const userName = $('#username')\n  const password = $('#password')\n  if (!userName.val().trim()) {\n    userName.addClass('is-invalid')\n  } else if (!password.val().trim()) {\n    password.addClass('is-invalid')\n  } else {\n    axios({\n      method: 'post',\n      url: `${apiUrl}Token`,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Credentials': 'true',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      data: `grant_type=password&username=${userName.val()}&password=${password.val()}`\n    }).then((res) => {\n      if (res && res.data && res.data.access_token) {\n        localStorage.setItem('accessToken', res.data.access_token)\n        window.location.href = '/admin'\n      }\n    }\n    )\n  }\n})\n\n// Logout\n$('#logout').click((e) => {\n  e.preventDefault()\n  localStorage.removeItem('accessToken')\n  window.location.href = '/login.html'\n})\n"],"file":"common.js"}