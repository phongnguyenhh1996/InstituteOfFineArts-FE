{"version":3,"sources":["src/posting.js"],"names":["UNAUTHORIZED","axios","interceptors","response","use","error","status","localStorage","removeItem","window","location","href","Promise","reject","apiUrl","method","url","headers","Authorization","getItem","then","res","me","JSON","parse","data","awardItemClone","$","clone","remove","forEach","item","RoleId","UserId","awardItem","find","attr","ImagePath","PostingId","Mark","hide","text","Quote","append","fadeIn","$grid","masonry","itemSelector","percentPosition","columnWidth","imagesLoaded","progress"],"mappings":";;AAAA;;AACA;AAGA,IAAMA,YAAY,GAAG,GAArB;AACAC,KAAK,CAACC,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACE,UAACD,QAAD;AAAA,SAAcA,QAAd;AAAA,CADF,EAEE,UAACE,KAAD,EAAW;AAAA,MAEPC,MAFO,GAGLD,KAAK,CAACF,QAHD,CAEPG,MAFO;;AAIT,MAAIA,MAAM,KAAKN,YAAf,EAA6B;AAC3BO,IAAAA,YAAY,CAACC,UAAb,CAAwB,aAAxB;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,aAAvB;AACD;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAeR,KAAf,CAAP;AACD,CAXH;AAaA,IAAMS,MAAM,GAAG,8BAAf;AAEAb,KAAK,CAAC;AACJc,EAAAA,MAAM,EAAE,KADJ;AAEJC,EAAAA,GAAG,EAAKF,MAAL,kBAFC;AAGJG,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,cAAYX,YAAY,CAACY,OAAb,CAAqB,aAArB;AADlB;AAHL,CAAD,CAAL,CAOGC,IAPH,CAOQ,UAACC,GAAD,EAAS;AACb,MAAMC,EAAE,GAAGf,YAAY,CAACY,OAAb,CAAqB,IAArB,KAA8BI,IAAI,CAACC,KAAL,CAAWjB,YAAY,CAACY,OAAb,CAAqB,IAArB,CAAX,CAAzC;;AACA,MAAIE,GAAG,IAAIA,GAAG,CAACI,IAAf,EAAqB;AACnB,QAAMC,cAAc,GAAGC,CAAC,CAAC,cAAD,CAAD,CAAkBC,KAAlB,EAAvB;AACAD,IAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBE,MAAhB;AACAR,IAAAA,GAAG,CAACI,IAAJ,CAASK,OAAT,CAAiB,UAACC,IAAD,EAAU;AACzB,UAAIT,EAAE,CAACU,MAAH,KAAc,CAAd,IAAmBD,IAAI,CAACE,MAAL,KAAgBX,EAAE,CAACW,MAAtC,IAAgDX,EAAE,CAACU,MAAH,KAAc,CAAlE,EAAqE;AACnE,YAAME,SAAS,GAAGR,cAAc,CAACE,KAAf,EAAlB;AACAM,QAAAA,SAAS,CAACC,IAAV,CAAe,aAAf,EAA8BC,IAA9B,CAAmC,KAAnC,OAA6CtB,MAA7C,GAAsDiB,IAAI,CAACM,SAA3D;AACAH,QAAAA,SAAS,CAACC,IAAV,CAAe,eAAf,EAAgCC,IAAhC,CAAqC,MAArC,oCAA6EL,IAAI,CAACO,SAAlF;;AACA,YAAI,CAACP,IAAI,CAACQ,IAAV,EAAgB;AACdL,UAAAA,SAAS,CAACC,IAAV,CAAe,sBAAf,EAAuCK,IAAvC;AACD,SAFD,MAEO;AACLN,UAAAA,SAAS,CAACC,IAAV,CAAe,eAAf,EAAgCM,IAAhC,CAAwCV,IAAI,CAACQ,IAA7C;AACD;;AACDL,QAAAA,SAAS,CAACC,IAAV,CAAe,eAAf,EAAgCM,IAAhC,CAAqCV,IAAI,CAACW,KAA1C;AACAf,QAAAA,CAAC,CAAC,cAAD,CAAD,CAAkBgB,MAAlB,CAAyBT,SAAzB;AACAA,QAAAA,SAAS,CAACU,MAAV;AACD;AACF,KAdD;AAeD;;AACD,MAAMC,KAAK,GAAGlB,CAAC,CAAC,OAAD,CAAD,CAAWmB,OAAX,CAAmB;AAC/BC,IAAAA,YAAY,EAAE,YADiB;AAE/BC,IAAAA,eAAe,EAAE,IAFc;AAG/BC,IAAAA,WAAW,EAAE;AAHkB,GAAnB,CAAd,CArBa,CA0Bb;;AACAJ,EAAAA,KAAK,CAACK,YAAN,GAAqBC,QAArB,CAA8B,YAAM;AAClCN,IAAAA,KAAK,CAACC,OAAN;AACD,GAFD;AAGD,CArCH","sourcesContent":["/* eslint-disable no-magic-numbers */\n/* eslint-disable linebreak-style */\nimport $ from 'jquery'\nimport axios from 'axios'\nconst UNAUTHORIZED = 401\naxios.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    const {\n      status\n    } = error.response\n    if (status === UNAUTHORIZED) {\n      localStorage.removeItem('accessToken')\n      window.location.href = '/login.html'\n    }\n    return Promise.reject(error)\n  }\n)\nconst apiUrl = 'http://192.168.43.211:44396/'\n\naxios({\n  method: 'get',\n  url: `${apiUrl}/api/Postings`,\n  headers: {\n    Authorization: `bearer ${localStorage.getItem('accessToken')}`\n  }\n})\n  .then((res) => {\n    const me = localStorage.getItem('me') && JSON.parse(localStorage.getItem('me'))\n    if (res && res.data) {\n      const awardItemClone = $('#postingItem').clone()\n      $('.grid-item').remove()\n      res.data.forEach((item) => {\n        if (me.RoleId === 4 && item.UserId === me.UserId || me.RoleId === 3) {\n          const awardItem = awardItemClone.clone()\n          awardItem.find('#postingImg').attr('src', `${apiUrl}${item.ImagePath}`)\n          awardItem.find('.posting-item').attr('href', `admin/posting-detail.html?id=${item.PostingId}`)\n          if (!item.Mark) {\n            awardItem.find('#postingPointWrapper').hide()\n          } else {\n            awardItem.find('#postingPoint').text(`${item.Mark} points`)\n          }\n          awardItem.find('#postingQuote').text(item.Quote)\n          $('#postingList').append(awardItem)\n          awardItem.fadeIn()\n        }\n      })\n    }\n    const $grid = $('.grid').masonry({\n      itemSelector: '.grid-item',\n      percentPosition: true,\n      columnWidth: '.grid-sizer'\n    })\n    // layout Masonry after each image loads\n    $grid.imagesLoaded().progress(() => {\n      $grid.masonry()\n    })\n  })\n\n"],"file":"posting.js"}